

task pyLocalInstall(type: Exec) {
    workingDir '.'
    commandLine 'pip', 'install', '--upgrade', 'src/main/python'
}

task pyLocalSimpleTest(type: Exec, dependsOn: pyLocalInstall) {
    workingDir '.'
    commandLine 'python3', 'src/test/python/test_source.py'
}

task pytest(type: Exec) {
    println "Running Python Unit Tests in ${buildDir} as ${System.properties['user.name']}"
    def xunit = (System.properties['user.name'].equals("jenkins")) ? "--junitxml=${buildDir}/reports/pytest.xml" : ""
    def pypath = "PYTHONPATH=./src/main/python"

    workingDir '.'
    commandLine 'docker',
            'run',
            '-e', pypath,
            '-v', "${projectDir}/:/code/",
            '-i', 'pef/python3',
            'pytest'
            //xunit
}
pytest.onlyIf { file('src/main/python').isDirectory() && file('src/test/python').isDirectory() }

task behave(type: Exec) {
    println "Running Python Unit Tests in ${buildDir} as ${System.properties['user.name']}"
    def xunit = (System.properties['user.name'].equals("jenkins")) ? "--junitxml=${buildDir}/reports/pybehave.xml" : ""
    //def xunit = "--junitxml=./build/reports/pytest.xml"
    def pypath = "PYTHONPATH=./src/main/python"
    workingDir '.'
    commandLine 'docker',
            'run',
            '-e', pypath,
            '-v', "${projectDir}/:/code/",
            '-i', 'pef/python3',
            'behave',
            'src/test/python/features'
            //'--junit'
}
behave.onlyIf { file('src/main/python').isDirectory() && file('src/test/python').isDirectory() }

task testall(type: Test, dependsOn:[behave, pytest])


task pypiclear(type:Exec) {
    workingDir '.'
    commandLine 'bash', '-c', "rm -f ~/pypi/pef.source-0.0.1.tar.gz"
}

task dockermain(type: Exec) {
    workingDir '.'
    commandLine 'docker-compose',
            'run',
            'main'
}

task dockertest(type: Exec, dependsOn: dockermain) {
    workingDir '.'
    commandLine 'docker-compose',
            'run',
            'test'
}

